{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***\n",
    "#### About this document\n",
    "_This is the assignment for the UCL CASA module Data Science for Spatial Systems (CASA0006) <br>This is a self contained Jupyter notebook with structure introduction, discussion and embeded code and bibliography._\n",
    "<br>\n",
    "**Code is hosted [here](https://github.com/antoniosfiala/UCL_DSSS_Final_Project)**<br>\n",
    "**Data is availble [here](https://liveuclac-my.sharepoint.com/:f:/g/personal/ucfnafi_ucl_ac_uk/EpV8UnlEQQdNpu28TZHgRYoBLl-LM4iuuDGyREiLCGTEmw?e=XV5Mrz)**\n",
    "***"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Traffic accident analysis and accident severity prediction in the United Kingdom"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.Porject Introduction"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.1 Introduction"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Traffic safety has always been an important issue for the sustainable development of transportation. Traffic accidents can have certain negative impacts on society, such as traffic congestion, casualties, and environmental pollution, which are not conducive to the sustainable and healthy development of transportation systems. With the continuous development of information technology, in recent years, government departments as well as many research scholars have devoted themselves to solving traffic problems by means of information science to assist in the development of intelligent transportation systems and sustainable transportation. Among them, traffic accident severity prediction has been an important and challenging direction in the field of intelligent traffic safety management system, which is important for analyzing the future development trend of traffic accidents and implementing active preventive measures under the existing road traffic conditions.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.2 Literature review"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In recent years, many researchers have tried different analytical methods from various perspectives in order to analyze the severity of traffic accidents and explore the relationship between accident severity and its influencing factors, among which the most widely used is the discrete choice model based on Logit or Probit models. (MENG et al., 2009; Al-Ghamdi, 2002). In recent years, artificial neural networks,support vector machines and rule-based (i.e., \" if-then\") data classification algorithms are also increasingly applied and their are also very explanatory (Hashmienejad, 2017).\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.3 Research question"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The aim of this project is to analyze the factors influencing traffic accidents in the UK and to predict the severity of accidents to assist in solving problems in the field of traffic safety.\n",
    "It specifically addresses the following questions.\n",
    "Which age groups of drivers have the highest number of traffic accidents?\n",
    "How long are vehicles used more likely to be involved in traffic accidents?\n",
    "Which days of the week have the lowest number of traffic accidents?\n",
    "Which speed limit roads are more likely to have traffic accidents?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Packages for data manipulation, processing and visualisation\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import datetime as dt\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Presentation of Data and Data preprocessing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.1 Importing Data and cleaning"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this project, we used two datasets named Accidents 0515.csv and Vehicles 0515.csv derived from the data of accidents occurring in the UK from 2005-2015 in Kaggle. In order to facilitate the understanding and selection of research factors for the next step of data visualization, the join () function was first applied to join the two datasets, and then the return results of the head () and describe () functions were applied to observe the specific parameters in the datasets."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "accidents = pd.read_csv('Accidents0515.csv',index_col='Accident_Index')\n",
    "vehicles=pd.read_csv('Vehicles0515.csv', error_bad_lines=False,index_col='Accident_Index',warn_bad_lines=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = accidents.join(vehicles, how='outer')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true,
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Location_Easting_OSGR</th>\n",
       "      <th>Location_Northing_OSGR</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Police_Force</th>\n",
       "      <th>Accident_Severity</th>\n",
       "      <th>Number_of_Vehicles</th>\n",
       "      <th>Number_of_Casualties</th>\n",
       "      <th>Date</th>\n",
       "      <th>Day_of_Week</th>\n",
       "      <th>...</th>\n",
       "      <th>Was_Vehicle_Left_Hand_Drive?</th>\n",
       "      <th>Journey_Purpose_of_Driver</th>\n",
       "      <th>Sex_of_Driver</th>\n",
       "      <th>Age_of_Driver</th>\n",
       "      <th>Age_Band_of_Driver</th>\n",
       "      <th>Engine_Capacity_(CC)</th>\n",
       "      <th>Propulsion_Code</th>\n",
       "      <th>Age_of_Vehicle</th>\n",
       "      <th>Driver_IMD_Decile</th>\n",
       "      <th>Driver_Home_Area_Type</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Accident_Index</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>200501BS00001</th>\n",
       "      <td>525680.0</td>\n",
       "      <td>178240.0</td>\n",
       "      <td>-0.191170</td>\n",
       "      <td>51.489096</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>04/01/2005</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200501BS00002</th>\n",
       "      <td>524170.0</td>\n",
       "      <td>181650.0</td>\n",
       "      <td>-0.211708</td>\n",
       "      <td>51.520075</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>05/01/2005</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>8268.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200501BS00003</th>\n",
       "      <td>524520.0</td>\n",
       "      <td>182240.0</td>\n",
       "      <td>-0.206458</td>\n",
       "      <td>51.525301</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>06/01/2005</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8300.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200501BS00003</th>\n",
       "      <td>524520.0</td>\n",
       "      <td>182240.0</td>\n",
       "      <td>-0.206458</td>\n",
       "      <td>51.525301</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>06/01/2005</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>1762.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200501BS00004</th>\n",
       "      <td>526900.0</td>\n",
       "      <td>177530.0</td>\n",
       "      <td>-0.173862</td>\n",
       "      <td>51.482442</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>07/01/2005</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>49.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1769.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 52 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                Location_Easting_OSGR  Location_Northing_OSGR  Longitude  \\\n",
       "Accident_Index                                                             \n",
       "200501BS00001                525680.0                178240.0  -0.191170   \n",
       "200501BS00002                524170.0                181650.0  -0.211708   \n",
       "200501BS00003                524520.0                182240.0  -0.206458   \n",
       "200501BS00003                524520.0                182240.0  -0.206458   \n",
       "200501BS00004                526900.0                177530.0  -0.173862   \n",
       "\n",
       "                 Latitude  Police_Force  Accident_Severity  \\\n",
       "Accident_Index                                               \n",
       "200501BS00001   51.489096             1                  2   \n",
       "200501BS00002   51.520075             1                  3   \n",
       "200501BS00003   51.525301             1                  3   \n",
       "200501BS00003   51.525301             1                  3   \n",
       "200501BS00004   51.482442             1                  3   \n",
       "\n",
       "                Number_of_Vehicles  Number_of_Casualties        Date  \\\n",
       "Accident_Index                                                         \n",
       "200501BS00001                    1                     1  04/01/2005   \n",
       "200501BS00002                    1                     1  05/01/2005   \n",
       "200501BS00003                    2                     1  06/01/2005   \n",
       "200501BS00003                    2                     1  06/01/2005   \n",
       "200501BS00004                    1                     1  07/01/2005   \n",
       "\n",
       "                Day_of_Week  ... Was_Vehicle_Left_Hand_Drive?  \\\n",
       "Accident_Index               ...                                \n",
       "200501BS00001             3  ...                          1.0   \n",
       "200501BS00002             4  ...                          1.0   \n",
       "200501BS00003             5  ...                          1.0   \n",
       "200501BS00003             5  ...                          1.0   \n",
       "200501BS00004             6  ...                          1.0   \n",
       "\n",
       "                Journey_Purpose_of_Driver Sex_of_Driver  Age_of_Driver  \\\n",
       "Accident_Index                                                           \n",
       "200501BS00001                        15.0           2.0           74.0   \n",
       "200501BS00002                         1.0           1.0           42.0   \n",
       "200501BS00003                         1.0           1.0           35.0   \n",
       "200501BS00003                        15.0           1.0           62.0   \n",
       "200501BS00004                        15.0           2.0           49.0   \n",
       "\n",
       "                Age_Band_of_Driver  Engine_Capacity_(CC)  Propulsion_Code  \\\n",
       "Accident_Index                                                              \n",
       "200501BS00001                 10.0                  -1.0             -1.0   \n",
       "200501BS00002                  7.0                8268.0              2.0   \n",
       "200501BS00003                  6.0                8300.0              2.0   \n",
       "200501BS00003                  9.0                1762.0              1.0   \n",
       "200501BS00004                  8.0                1769.0              1.0   \n",
       "\n",
       "                Age_of_Vehicle  Driver_IMD_Decile  Driver_Home_Area_Type  \n",
       "Accident_Index                                                            \n",
       "200501BS00001             -1.0                7.0                    1.0  \n",
       "200501BS00002              3.0               -1.0                   -1.0  \n",
       "200501BS00003              5.0                2.0                    1.0  \n",
       "200501BS00003              6.0                1.0                    1.0  \n",
       "200501BS00004              4.0                2.0                    1.0  \n",
       "\n",
       "[5 rows x 52 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true,
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Location_Easting_OSGR</th>\n",
       "      <th>Location_Northing_OSGR</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Police_Force</th>\n",
       "      <th>Accident_Severity</th>\n",
       "      <th>Number_of_Vehicles</th>\n",
       "      <th>Number_of_Casualties</th>\n",
       "      <th>Day_of_Week</th>\n",
       "      <th>Local_Authority_(District)</th>\n",
       "      <th>...</th>\n",
       "      <th>Was_Vehicle_Left_Hand_Drive?</th>\n",
       "      <th>Journey_Purpose_of_Driver</th>\n",
       "      <th>Sex_of_Driver</th>\n",
       "      <th>Age_of_Driver</th>\n",
       "      <th>Age_Band_of_Driver</th>\n",
       "      <th>Engine_Capacity_(CC)</th>\n",
       "      <th>Propulsion_Code</th>\n",
       "      <th>Age_of_Vehicle</th>\n",
       "      <th>Driver_IMD_Decile</th>\n",
       "      <th>Driver_Home_Area_Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>3.144256e+06</td>\n",
       "      <td>3.144256e+06</td>\n",
       "      <td>3.144256e+06</td>\n",
       "      <td>3.144256e+06</td>\n",
       "      <td>3.144481e+06</td>\n",
       "      <td>3.144481e+06</td>\n",
       "      <td>3.144481e+06</td>\n",
       "      <td>3.144481e+06</td>\n",
       "      <td>3.144481e+06</td>\n",
       "      <td>3.144481e+06</td>\n",
       "      <td>...</td>\n",
       "      <td>3.004425e+06</td>\n",
       "      <td>3.004425e+06</td>\n",
       "      <td>3.004425e+06</td>\n",
       "      <td>3.004425e+06</td>\n",
       "      <td>3.004425e+06</td>\n",
       "      <td>3.004425e+06</td>\n",
       "      <td>3.004425e+06</td>\n",
       "      <td>3.004425e+06</td>\n",
       "      <td>3.004425e+06</td>\n",
       "      <td>3.004425e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4.406010e+05</td>\n",
       "      <td>2.962574e+05</td>\n",
       "      <td>-1.421666e+00</td>\n",
       "      <td>5.255432e+01</td>\n",
       "      <td>3.061660e+01</td>\n",
       "      <td>2.849668e+00</td>\n",
       "      <td>2.098666e+00</td>\n",
       "      <td>1.422741e+00</td>\n",
       "      <td>4.115839e+00</td>\n",
       "      <td>3.523968e+02</td>\n",
       "      <td>...</td>\n",
       "      <td>9.891550e-01</td>\n",
       "      <td>8.714362e+00</td>\n",
       "      <td>1.399377e+00</td>\n",
       "      <td>3.432806e+01</td>\n",
       "      <td>5.849723e+00</td>\n",
       "      <td>1.411705e+03</td>\n",
       "      <td>7.518251e-01</td>\n",
       "      <td>4.840520e+00</td>\n",
       "      <td>3.559397e+00</td>\n",
       "      <td>8.822091e-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>9.483568e+04</td>\n",
       "      <td>1.583615e+05</td>\n",
       "      <td>1.392781e+00</td>\n",
       "      <td>1.426111e+00</td>\n",
       "      <td>2.508302e+01</td>\n",
       "      <td>3.911298e-01</td>\n",
       "      <td>9.301832e-01</td>\n",
       "      <td>9.902698e-01</td>\n",
       "      <td>1.911975e+00</td>\n",
       "      <td>2.557684e+02</td>\n",
       "      <td>...</td>\n",
       "      <td>1.872632e-01</td>\n",
       "      <td>5.994410e+00</td>\n",
       "      <td>5.963102e-01</td>\n",
       "      <td>1.943809e+01</td>\n",
       "      <td>2.927710e+00</td>\n",
       "      <td>1.692195e+03</td>\n",
       "      <td>1.154131e+00</td>\n",
       "      <td>5.329182e+00</td>\n",
       "      <td>3.734888e+00</td>\n",
       "      <td>1.114586e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>6.495000e+04</td>\n",
       "      <td>1.029000e+04</td>\n",
       "      <td>-7.516225e+00</td>\n",
       "      <td>4.991294e+01</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>...</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>3.776100e+05</td>\n",
       "      <td>1.778830e+05</td>\n",
       "      <td>-2.336508e+00</td>\n",
       "      <td>5.148671e+01</td>\n",
       "      <td>7.000000e+00</td>\n",
       "      <td>3.000000e+00</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>3.000000e+00</td>\n",
       "      <td>1.240000e+02</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>2.200000e+01</td>\n",
       "      <td>5.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>-1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>4.416100e+05</td>\n",
       "      <td>2.636525e+05</td>\n",
       "      <td>-1.382849e+00</td>\n",
       "      <td>5.225844e+01</td>\n",
       "      <td>3.100000e+01</td>\n",
       "      <td>3.000000e+00</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>4.000000e+00</td>\n",
       "      <td>3.290000e+02</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>6.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>3.400000e+01</td>\n",
       "      <td>6.000000e+00</td>\n",
       "      <td>1.388000e+03</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>4.000000e+00</td>\n",
       "      <td>3.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>5.228500e+05</td>\n",
       "      <td>3.951100e+05</td>\n",
       "      <td>-2.232980e-01</td>\n",
       "      <td>5.345090e+01</td>\n",
       "      <td>4.600000e+01</td>\n",
       "      <td>3.000000e+00</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>6.000000e+00</td>\n",
       "      <td>5.300000e+02</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.500000e+01</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>4.700000e+01</td>\n",
       "      <td>8.000000e+00</td>\n",
       "      <td>1.896000e+03</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>9.000000e+00</td>\n",
       "      <td>7.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>6.555400e+05</td>\n",
       "      <td>1.208800e+06</td>\n",
       "      <td>1.762010e+00</td>\n",
       "      <td>6.075754e+01</td>\n",
       "      <td>9.800000e+01</td>\n",
       "      <td>3.000000e+00</td>\n",
       "      <td>6.700000e+01</td>\n",
       "      <td>9.300000e+01</td>\n",
       "      <td>7.000000e+00</td>\n",
       "      <td>9.410000e+02</td>\n",
       "      <td>...</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>1.500000e+01</td>\n",
       "      <td>3.000000e+00</td>\n",
       "      <td>1.000000e+02</td>\n",
       "      <td>1.100000e+01</td>\n",
       "      <td>9.999900e+04</td>\n",
       "      <td>1.200000e+01</td>\n",
       "      <td>1.110000e+02</td>\n",
       "      <td>1.000000e+01</td>\n",
       "      <td>3.000000e+00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 48 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Location_Easting_OSGR  Location_Northing_OSGR     Longitude  \\\n",
       "count           3.144256e+06            3.144256e+06  3.144256e+06   \n",
       "mean            4.406010e+05            2.962574e+05 -1.421666e+00   \n",
       "std             9.483568e+04            1.583615e+05  1.392781e+00   \n",
       "min             6.495000e+04            1.029000e+04 -7.516225e+00   \n",
       "25%             3.776100e+05            1.778830e+05 -2.336508e+00   \n",
       "50%             4.416100e+05            2.636525e+05 -1.382849e+00   \n",
       "75%             5.228500e+05            3.951100e+05 -2.232980e-01   \n",
       "max             6.555400e+05            1.208800e+06  1.762010e+00   \n",
       "\n",
       "           Latitude  Police_Force  Accident_Severity  Number_of_Vehicles  \\\n",
       "count  3.144256e+06  3.144481e+06       3.144481e+06        3.144481e+06   \n",
       "mean   5.255432e+01  3.061660e+01       2.849668e+00        2.098666e+00   \n",
       "std    1.426111e+00  2.508302e+01       3.911298e-01        9.301832e-01   \n",
       "min    4.991294e+01  1.000000e+00       1.000000e+00        1.000000e+00   \n",
       "25%    5.148671e+01  7.000000e+00       3.000000e+00        2.000000e+00   \n",
       "50%    5.225844e+01  3.100000e+01       3.000000e+00        2.000000e+00   \n",
       "75%    5.345090e+01  4.600000e+01       3.000000e+00        2.000000e+00   \n",
       "max    6.075754e+01  9.800000e+01       3.000000e+00        6.700000e+01   \n",
       "\n",
       "       Number_of_Casualties   Day_of_Week  Local_Authority_(District)  ...  \\\n",
       "count          3.144481e+06  3.144481e+06                3.144481e+06  ...   \n",
       "mean           1.422741e+00  4.115839e+00                3.523968e+02  ...   \n",
       "std            9.902698e-01  1.911975e+00                2.557684e+02  ...   \n",
       "min            1.000000e+00  1.000000e+00                1.000000e+00  ...   \n",
       "25%            1.000000e+00  3.000000e+00                1.240000e+02  ...   \n",
       "50%            1.000000e+00  4.000000e+00                3.290000e+02  ...   \n",
       "75%            2.000000e+00  6.000000e+00                5.300000e+02  ...   \n",
       "max            9.300000e+01  7.000000e+00                9.410000e+02  ...   \n",
       "\n",
       "       Was_Vehicle_Left_Hand_Drive?  Journey_Purpose_of_Driver  Sex_of_Driver  \\\n",
       "count                  3.004425e+06               3.004425e+06   3.004425e+06   \n",
       "mean                   9.891550e-01               8.714362e+00   1.399377e+00   \n",
       "std                    1.872632e-01               5.994410e+00   5.963102e-01   \n",
       "min                   -1.000000e+00              -1.000000e+00  -1.000000e+00   \n",
       "25%                    1.000000e+00               2.000000e+00   1.000000e+00   \n",
       "50%                    1.000000e+00               6.000000e+00   1.000000e+00   \n",
       "75%                    1.000000e+00               1.500000e+01   2.000000e+00   \n",
       "max                    2.000000e+00               1.500000e+01   3.000000e+00   \n",
       "\n",
       "       Age_of_Driver  Age_Band_of_Driver  Engine_Capacity_(CC)  \\\n",
       "count   3.004425e+06        3.004425e+06          3.004425e+06   \n",
       "mean    3.432806e+01        5.849723e+00          1.411705e+03   \n",
       "std     1.943809e+01        2.927710e+00          1.692195e+03   \n",
       "min    -1.000000e+00       -1.000000e+00         -1.000000e+00   \n",
       "25%     2.200000e+01        5.000000e+00         -1.000000e+00   \n",
       "50%     3.400000e+01        6.000000e+00          1.388000e+03   \n",
       "75%     4.700000e+01        8.000000e+00          1.896000e+03   \n",
       "max     1.000000e+02        1.100000e+01          9.999900e+04   \n",
       "\n",
       "       Propulsion_Code  Age_of_Vehicle  Driver_IMD_Decile  \\\n",
       "count     3.004425e+06    3.004425e+06       3.004425e+06   \n",
       "mean      7.518251e-01    4.840520e+00       3.559397e+00   \n",
       "std       1.154131e+00    5.329182e+00       3.734888e+00   \n",
       "min      -1.000000e+00   -1.000000e+00      -1.000000e+00   \n",
       "25%      -1.000000e+00   -1.000000e+00      -1.000000e+00   \n",
       "50%       1.000000e+00    4.000000e+00       3.000000e+00   \n",
       "75%       1.000000e+00    9.000000e+00       7.000000e+00   \n",
       "max       1.200000e+01    1.110000e+02       1.000000e+01   \n",
       "\n",
       "       Driver_Home_Area_Type  \n",
       "count           3.004425e+06  \n",
       "mean            8.822091e-01  \n",
       "std             1.114586e+00  \n",
       "min            -1.000000e+00  \n",
       "25%             1.000000e+00  \n",
       "50%             1.000000e+00  \n",
       "75%             1.000000e+00  \n",
       "max             3.000000e+00  \n",
       "\n",
       "[8 rows x 48 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "tags": []
   },
   "source": [
    "As can be seen from the above table, each column of the dataset is in numeric format, which is very convenient for processing the large number of factors in the dataset used in this project.  In order to simplify the scale of data processing, this project first combines the data of the two factors Date and Time into a single parameter named 'Date_time'. Secondly, the information of parameters with similar or less useful meaning in this project was deleted: 'Longitude', 'Latitude', 'Driver_IMD_Decile', 'Driver_Home_Area_Type', 'Location_Easting_OSGR', 'Location _Northing_OSGR', 'LSOA_of_Accident_Location', 'Junction_Control' , '2nd_Road_Class', 'Date', 'Time'."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true,
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Police_Force                                   False\n",
       "Accident_Severity                              False\n",
       "Number_of_Vehicles                             False\n",
       "Number_of_Casualties                           False\n",
       "Day_of_Week                                    False\n",
       "Local_Authority_(District)                     False\n",
       "Local_Authority_(Highway)                      False\n",
       "1st_Road_Class                                 False\n",
       "1st_Road_Number                                False\n",
       "Road_Type                                      False\n",
       "Speed_limit                                    False\n",
       "Junction_Detail                                False\n",
       "2nd_Road_Number                                False\n",
       "Pedestrian_Crossing-Human_Control              False\n",
       "Pedestrian_Crossing-Physical_Facilities        False\n",
       "Light_Conditions                               False\n",
       "Weather_Conditions                             False\n",
       "Road_Surface_Conditions                        False\n",
       "Special_Conditions_at_Site                     False\n",
       "Carriageway_Hazards                            False\n",
       "Urban_or_Rural_Area                            False\n",
       "Did_Police_Officer_Attend_Scene_of_Accident    False\n",
       "Vehicle_Reference                               True\n",
       "Vehicle_Type                                    True\n",
       "Towing_and_Articulation                         True\n",
       "Vehicle_Manoeuvre                               True\n",
       "Vehicle_Location-Restricted_Lane                True\n",
       "Junction_Location                               True\n",
       "Skidding_and_Overturning                        True\n",
       "Hit_Object_in_Carriageway                       True\n",
       "Vehicle_Leaving_Carriageway                     True\n",
       "Hit_Object_off_Carriageway                      True\n",
       "1st_Point_of_Impact                             True\n",
       "Was_Vehicle_Left_Hand_Drive?                    True\n",
       "Journey_Purpose_of_Driver                       True\n",
       "Sex_of_Driver                                   True\n",
       "Age_of_Driver                                   True\n",
       "Age_Band_of_Driver                              True\n",
       "Engine_Capacity_(CC)                            True\n",
       "Propulsion_Code                                 True\n",
       "Age_of_Vehicle                                  True\n",
       "Date_time                                       True\n",
       "dtype: bool"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Date_time'] =  df['Date'] +' '+ df['Time']\n",
    "df.drop(['Longitude', 'Latitude', 'Driver_IMD_Decile', 'Driver_Home_Area_Type', 'Location_Easting_OSGR',\n",
    "         'Location_Northing_OSGR','LSOA_of_Accident_Location', 'Junction_Control' ,'2nd_Road_Class','Date','Time'], axis=1, inplace=True)\n",
    "#delete rows with similar meaning or seem not that useful\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.2 Identifying Missing and Null Values"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the dataset used in this project, there may be two types of missing values that may exist: null values and '-1'. The df[col] function and the isnull(). any() function are used to test the missing values for each column parameter, and the isnull().sum() function is used to count the total missing values in each column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "jupyter": {
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "for col in df.columns:\n",
    "    df = (df[df[col]!=-1])\n",
    "\n",
    "    \n",
    "df.isnull().any()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true,
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Police_Force                                        0\n",
       "Accident_Severity                                   0\n",
       "Number_of_Vehicles                                  0\n",
       "Number_of_Casualties                                0\n",
       "Day_of_Week                                         0\n",
       "Local_Authority_(District)                          0\n",
       "Local_Authority_(Highway)                           0\n",
       "1st_Road_Class                                      0\n",
       "1st_Road_Number                                     0\n",
       "Road_Type                                           0\n",
       "Speed_limit                                         0\n",
       "Junction_Detail                                     0\n",
       "2nd_Road_Number                                     0\n",
       "Pedestrian_Crossing-Human_Control                   0\n",
       "Pedestrian_Crossing-Physical_Facilities             0\n",
       "Light_Conditions                                    0\n",
       "Weather_Conditions                                  0\n",
       "Road_Surface_Conditions                             0\n",
       "Special_Conditions_at_Site                          0\n",
       "Carriageway_Hazards                                 0\n",
       "Urban_or_Rural_Area                                 0\n",
       "Did_Police_Officer_Attend_Scene_of_Accident         0\n",
       "Vehicle_Reference                              138935\n",
       "Vehicle_Type                                   138935\n",
       "Towing_and_Articulation                        138935\n",
       "Vehicle_Manoeuvre                              138935\n",
       "Vehicle_Location-Restricted_Lane               138935\n",
       "Junction_Location                              138935\n",
       "Skidding_and_Overturning                       138935\n",
       "Hit_Object_in_Carriageway                      138935\n",
       "Vehicle_Leaving_Carriageway                    138935\n",
       "Hit_Object_off_Carriageway                     138935\n",
       "1st_Point_of_Impact                            138935\n",
       "Was_Vehicle_Left_Hand_Drive?                   138935\n",
       "Journey_Purpose_of_Driver                      138935\n",
       "Sex_of_Driver                                  138935\n",
       "Age_of_Driver                                  138935\n",
       "Age_Band_of_Driver                             138935\n",
       "Engine_Capacity_(CC)                           138935\n",
       "Propulsion_Code                                138935\n",
       "Age_of_Vehicle                                 138935\n",
       "Date_time                                         152\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After obtaining the number of missing values for each feature, the average value or special value is normally input to the dataset to fill the vacancies. However, since the dataset used in this project is large enough and has enough data, it is possible to directly delete the data in the row where the vacant values are located and execute the analysis command directly. In this work, the len() function is used to get the total number of rows in the data set, and then the df.dropna() function is used to directly delete all rows containing null values. Finally, 1914,377 rows of data are obtained."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true,
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2053446\n",
      "1914377\n"
     ]
    }
   ],
   "source": [
    "print(len(df))\n",
    "df.dropna(inplace=True)\n",
    "print(len(df))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After completing the null processing, the isnull().any() function is then applied to check the dataset for vacancy values to ensure that the dataset used in this work is currently clean and ready for analysis and visualization."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true,
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Police_Force                                   False\n",
       "Accident_Severity                              False\n",
       "Number_of_Vehicles                             False\n",
       "Number_of_Casualties                           False\n",
       "Day_of_Week                                    False\n",
       "Local_Authority_(District)                     False\n",
       "Local_Authority_(Highway)                      False\n",
       "1st_Road_Class                                 False\n",
       "1st_Road_Number                                False\n",
       "Road_Type                                      False\n",
       "Speed_limit                                    False\n",
       "Junction_Detail                                False\n",
       "2nd_Road_Number                                False\n",
       "Pedestrian_Crossing-Human_Control              False\n",
       "Pedestrian_Crossing-Physical_Facilities        False\n",
       "Light_Conditions                               False\n",
       "Weather_Conditions                             False\n",
       "Road_Surface_Conditions                        False\n",
       "Special_Conditions_at_Site                     False\n",
       "Carriageway_Hazards                            False\n",
       "Urban_or_Rural_Area                            False\n",
       "Did_Police_Officer_Attend_Scene_of_Accident    False\n",
       "Vehicle_Reference                              False\n",
       "Vehicle_Type                                   False\n",
       "Towing_and_Articulation                        False\n",
       "Vehicle_Manoeuvre                              False\n",
       "Vehicle_Location-Restricted_Lane               False\n",
       "Junction_Location                              False\n",
       "Skidding_and_Overturning                       False\n",
       "Hit_Object_in_Carriageway                      False\n",
       "Vehicle_Leaving_Carriageway                    False\n",
       "Hit_Object_off_Carriageway                     False\n",
       "1st_Point_of_Impact                            False\n",
       "Was_Vehicle_Left_Hand_Drive?                   False\n",
       "Journey_Purpose_of_Driver                      False\n",
       "Sex_of_Driver                                  False\n",
       "Age_of_Driver                                  False\n",
       "Age_Band_of_Driver                             False\n",
       "Engine_Capacity_(CC)                           False\n",
       "Propulsion_Code                                False\n",
       "Age_of_Vehicle                                 False\n",
       "Date_time                                      False\n",
       "dtype: bool"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().any()\n",
    "#no null value exists"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.3 Data Visualization"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As can be seen from the above analysis, the dataset is very large and it is difficult for us to discuss every variable, so only a few columns are used for the analysis."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Age of the driver involved in the accident"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true,
     "source_hidden": true
    },
    "scrolled": true,
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(df['Age_of_Driver'])\n",
    "fig = plt.figure();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It can be seen from the above figure that the age of drivers involved in accidents presents an approximately negative correlation with the accident rate. The accident rate is highest among drivers in their 20s and mid-20s, with a slight fluctuation in their 30s and 40s, but overall decreasing with age. This finding may be counterintuitive, since t intuitively most of the owners of vehicles driving on the road are between the ages of 27-33, yet they are less likely to be involved in an accident than drivers around 20 years old. We speculate that this phenomenon may be related to the impatience of young people and their unskilled driving skills."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Age of the vehicle involved in the accident"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "g = sns.distplot(df['Age_of_Vehicle'])\n",
    "g.set(xlim=(0,20), ylim=(0,0.12));"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The results of this data analysis are very interesting. In general, it is commonly believed that the longer a car is used, the more likely it is to break down, which leads to a high number of traffic accidents. However, the dataset we used found that new cars within two to three years of use accounted for the highest proportion of accidents that occurred instead, followed surprisingly by a gradual decrease in the proportion of accidents that occurred as the car's use increased. In other words, the older the car, the less likely it is to be involved in an accident. We speculate this result may be related to the driver's mentality. They take good care of new cars at the beginning, but after a period, they begin to relax their driving mentality, which leads to frequent accidents.Then as the car gets older, they become more vigilant to avoid damage to the vehicle and affect its service life, thus making the accident rate lower."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Accidents on the day of a week"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true,
     "source_hidden": true
    },
    "scrolled": true,
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(df['Day_of_Week'])\n",
    "fig = plt.figure();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above graph, we can learn that traffic accidents occur most frequently on Saturday, the least on Monday, and the proportion of accidents on the remaining weekdays were similar, but all are higher than Sunday. We suspect the reason for this phenomenon is that people will travel and relax on Saturday, which leads to an increase in road traffic flow and an increase in the probability of accidents. On Sunday, people may prefer to rest at home to relieve the fatigue of the previous days. Monday is the first day of the week to work, to avoid late, people will be very cautious driving. All these reasons have led to the results of this data."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Accidents percentage in Speed Zone"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true,
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "'explode' must be of length 'x'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-16-07d35fd1a98a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mexplode\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m0.0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0.0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0.0\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0;36m0.0\u001b[0m \u001b[0;34m,\u001b[0m\u001b[0;36m0.0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0.0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m8\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m plt.pie(speed.values,  labels=None, \n\u001b[0m\u001b[1;32m      7\u001b[0m         autopct='%.1f',pctdistance=0.8, labeldistance=1.9 ,explode = explode, shadow=False, startangle=160,textprops={'fontsize': 15})\n\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/sds2020/lib/python3.8/site-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36mpie\u001b[0;34m(x, explode, labels, colors, autopct, pctdistance, shadow, labeldistance, startangle, radius, counterclock, wedgeprops, textprops, center, frame, rotatelabels, normalize, data)\u001b[0m\n\u001b[1;32m   2973\u001b[0m         \u001b[0mtextprops\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcenter\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mframe\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2974\u001b[0m         rotatelabels=False, *, normalize=None, data=None):\n\u001b[0;32m-> 2975\u001b[0;31m     return gca().pie(\n\u001b[0m\u001b[1;32m   2976\u001b[0m         \u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexplode\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mexplode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcolors\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2977\u001b[0m         \u001b[0mautopct\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mautopct\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpctdistance\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpctdistance\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mshadow\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mshadow\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/sds2020/lib/python3.8/site-packages/matplotlib/__init__.py\u001b[0m in \u001b[0;36minner\u001b[0;34m(ax, data, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1350\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0minner\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1351\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1352\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msanitize_sequence\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1353\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1354\u001b[0m         \u001b[0mbound\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_sig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbind\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/sds2020/lib/python3.8/site-packages/matplotlib/axes/_axes.py\u001b[0m in \u001b[0;36mpie\u001b[0;34m(self, x, explode, labels, colors, autopct, pctdistance, shadow, labeldistance, startangle, radius, counterclock, wedgeprops, textprops, center, frame, rotatelabels, normalize)\u001b[0m\n\u001b[1;32m   3058\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"'label' must be of length 'x'\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3059\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mexplode\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3060\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"'explode' must be of length 'x'\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3061\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcolors\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3062\u001b[0m             \u001b[0mget_next_color\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_patches_for_fill\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_next_color\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mValueError\u001b[0m: 'explode' must be of length 'x'"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAeAAAAHWCAYAAACv91olAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/Z1A+gAAAACXBIWXMAAAsTAAALEwEAmpwYAAARVElEQVR4nO3dX4il913H8c/X3Qa0/mlpVtEki1FS41400o6xiH9Si5rkJhR6kVRaDIUl2IiXDV7oRW/0QhBp6rKUULwxFza0qcQGQdoKNZoNtGnTkrKmmKwpJLGlQgXDtl8vZtRxOpt5dnLOfp3T1wsOzPOc35z58mPZ9z5nZp6t7g4AcGV93/QAAPC9SIABYIAAA8AAAQaAAQIMAAMEGAAGHBjgqnqgql6oqi9e4vmqqj+rqvNV9WRVvXn1YwLAZllyBfyRJLe+wvO3Jblh53E6yZ+/+rEAYLMdGODu/kySr7/CkjuS/EVveyzJ66rqx1c1IABsolV8D/iaJM/tOr6wcw4AuITjK3iN2ufcvve3rKrT2X6bOq997WvfcuONN67gywPAjCeeeOKl7j5xmM9dRYAvJLlu1/G1SZ7fb2F3n01yNkm2trb63LlzK/jyADCjqv7lsJ+7iregH07ynp2fhn5rkm9299dW8LoAsLEOvAKuqr9MckuSq6vqQpI/TPKaJOnuM0keSXJ7kvNJ/iPJ3esaFgA2xYEB7u67Dni+k7xvZRMBwPcAd8ICgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMGBRgKvq1qp6uqrOV9V9+zz/I1X1iar6fFU9VVV3r35UANgcBwa4qo4luT/JbUlOJbmrqk7tWfa+JF/q7puS3JLkT6rqqhXPCgAbY8kV8M1Jznf3M939cpIHk9yxZ00n+aGqqiQ/mOTrSS6udFIA2CBLAnxNkud2HV/YObfbB5P8bJLnk3whye9193dWMiEAbKAlAa59zvWe499M8rkkP5Hk55J8sKp++LteqOp0VZ2rqnMvvvjiZY4KAJtjSYAvJLlu1/G12b7S3e3uJA/1tvNJvprkxr0v1N1nu3uru7dOnDhx2JkB4MhbEuDHk9xQVdfv/GDVnUke3rPm2SRvT5Kq+rEkP5PkmVUOCgCb5PhBC7r7YlXdm+TRJMeSPNDdT1XVPTvPn0nygSQfqaovZPst6/d390trnBsAjrQDA5wk3f1Ikkf2nDuz6+Pnk/zGakcDgM3lTlgAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABggwAAwQYAAYIMAAMECAAWCAAAPAAAEGgAECDAADBBgABiwKcFXdWlVPV9X5qrrvEmtuqarPVdVTVfXp1Y4JAJvl+EELqupYkvuT/HqSC0ker6qHu/tLu9a8LsmHktza3c9W1Y+uaV4A2AhLroBvTnK+u5/p7peTPJjkjj1r3pXkoe5+Nkm6+4XVjgkAm2VJgK9J8tyu4ws753Z7Y5LXV9WnquqJqnrPqgYEgE104FvQSWqfc73P67wlyduTfH+Sf6iqx7r7K//nhapOJzmdJCdPnrz8aQFgQyy5Ar6Q5Lpdx9cmeX6fNZ/s7m9190tJPpPkpr0v1N1nu3uru7dOnDhx2JkB4MhbEuDHk9xQVddX1VVJ7kzy8J41H0/yy1V1vKp+IMkvJPnyakcFgM1x4FvQ3X2xqu5N8miSY0ke6O6nquqenefPdPeXq+qTSZ5M8p0kH+7uL65zcAA4yqp777dzr4ytra0+d+7cyNcGgFWoqie6e+swn+tOWAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGLApwVd1aVU9X1fmquu8V1v18VX27qt65uhEBYPMcGOCqOpbk/iS3JTmV5K6qOnWJdX+c5NFVDwkAm2bJFfDNSc539zPd/XKSB5Pcsc+6303y0SQvrHA+ANhISwJ8TZLndh1f2Dn3P6rqmiTvSHJmdaMBwOZaEuDa51zvOf7TJO/v7m+/4gtVna6qc1V17sUXX1w4IgBsnuML1lxIct2u42uTPL9nzVaSB6sqSa5OcntVXezuj+1e1N1nk5xNkq2trb0RB4DvGUsC/HiSG6rq+iT/muTOJO/avaC7r//vj6vqI0n+em98AYD/dWCAu/tiVd2b7Z9uPpbkge5+qqru2Xne930B4DItuQJOdz+S5JE95/YNb3f/9qsfCwA2mzthAcAAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABiwKMBVdWtVPV1V56vqvn2e/62qenLn8dmqumn1owLA5jgwwFV1LMn9SW5LcirJXVV1as+yryb51e5+U5IPJDm76kEBYJMsuQK+Ocn57n6mu19O8mCSO3Yv6O7Pdvc3dg4fS3LtascEgM2yJMDXJHlu1/GFnXOX8t4kf/NqhgKATXd8wZra51zvu7DqbdkO8C9d4vnTSU4nycmTJxeOCACbZ8kV8IUk1+06vjbJ83sXVdWbknw4yR3d/W/7vVB3n+3ure7eOnHixGHmBYCNsCTAjye5oaqur6qrktyZ5OHdC6rqZJKHkry7u7+y+jEBYLMc+BZ0d1+sqnuTPJrkWJIHuvupqrpn5/kzSf4gyRuSfKiqkuRid2+tb2wAONqqe99v567d1tZWnzt3buRrA8AqVNUTh73gdCcsABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAQIMAAMWBbiqbq2qp6vqfFXdt8/zVVV/tvP8k1X15tWPCgCb48AAV9WxJPcnuS3JqSR3VdWpPctuS3LDzuN0kj9f8ZwAsFGWXAHfnOR8dz/T3S8neTDJHXvW3JHkL3rbY0leV1U/vuJZAWBjLAnwNUme23V8Yefc5a4BAHYcX7Cm9jnXh1iTqjqd7beok+Q/q+qLC74+l+/qJC9ND7Gh7O362Nv1sbfr8zOH/cQlAb6Q5Lpdx9cmef4Qa9LdZ5OcTZKqOtfdW5c1LYvY2/Wxt+tjb9fH3q5PVZ077OcueQv68SQ3VNX1VXVVkjuTPLxnzcNJ3rPz09BvTfLN7v7aYYcCgE134BVwd1+sqnuTPJrkWJIHuvupqrpn5/kzSR5JcnuS80n+I8nd6xsZAI6+JW9Bp7sfyXZkd587s+vjTvK+y/zaZy9zPcvZ2/Wxt+tjb9fH3q7Pofe2ttsJAFxJbkUJAAPWHmC3sVyfBXv7Wzt7+mRVfbaqbpqY8yg6aG93rfv5qvp2Vb3zSs53lC3Z26q6pao+V1VPVdWnr/SMR9WCvxN+pKo+UVWf39lbP6+zQFU9UFUvXOpXZw/dse5e2yPbP7T1z0l+KslVST6f5NSeNbcn+Zts/y7xW5P84zpn2pTHwr39xSSv3/n4Nnu7ur3dte7vsv3zEe+cnvsoPBb+uX1dki8lOblz/KPTcx+Fx8K9/f0kf7zz8YkkX09y1fTs/98fSX4lyZuTfPESzx+qY+u+AnYby/U5cG+7+7Pd/Y2dw8ey/fvZHGzJn9sk+d0kH03ywpUc7ohbsrfvSvJQdz+bJN1tf5dZsred5IeqqpL8YLYDfPHKjnn0dPdnsr1Xl3Kojq07wG5juT6Xu2/vzfa/0DjYgXtbVdckeUeSM+FyLPlz+8Ykr6+qT1XVE1X1nis23dG2ZG8/mORns32jpC8k+b3u/s6VGW+jHapji34N6VVY2W0s+S6L962q3pbtAP/SWifaHEv29k+TvL+7v719McFCS/b2eJK3JHl7ku9P8g9V9Vh3f2Xdwx1xS/b2N5N8LsmvJfnpJH9bVX/f3f++5tk23aE6tu4Ar+w2lnyXRftWVW9K8uEkt3X3v12h2Y66JXu7leTBnfheneT2qrrY3R+7IhMeXUv/Tnipu7+V5FtV9ZkkNyUR4Fe2ZG/vTvJHvf2Ny/NV9dUkNyb5pysz4sY6VMfW/Ra021iuz4F7W1UnkzyU5N2uHi7LgXvb3dd39092908m+askvyO+iyz5O+HjSX65qo5X1Q8k+YUkX77Ccx5FS/b22Wy/s5Cq+rFs/0cCz1zRKTfToTq21ivgdhvLtVm4t3+Q5A1JPrRzpXax3ZD9QAv3lkNYsrfd/eWq+mSSJ5N8J8mHu9v/nHaAhX9uP5DkI1X1hWy/bfr+7va/JB2gqv4yyS1Jrq6qC0n+MMlrklfXMXfCAoAB7oQFAAMEGAAGCDAADBBgABggwAAwQIABYIAAA8AAAQaAAf8FcB6nOlm5G6sAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "speed_zone_accidents = df.loc[df['Speed_limit'].isin(['20' ,'30' ,'40' ,'50' ,'60' ,'70'])]\n",
    "speed  = speed_zone_accidents.Speed_limit.value_counts()\n",
    "\n",
    "explode = (0.0, 0.0, 0.0 , 0.0 ,0.0,0.0) \n",
    "plt.figure(figsize=(10,8))\n",
    "plt.pie(speed.values,  labels=None, \n",
    "        autopct='%.1f',pctdistance=0.8, labeldistance=1.9 ,explode = explode, shadow=False, startangle=160,textprops={'fontsize': 15})\n",
    " \n",
    "plt.axis('equal')\n",
    "plt.legend(speed.index, bbox_to_anchor=(1,0.7), loc=\"center right\", fontsize=15, \n",
    "           bbox_transform=plt.gcf().transFigure)\n",
    "plt.figtext(.5,.9,'Accidents percentage in Speed Zone', fontsize=25, ha='center')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As can be seen from the pie chart above, most accidents occur on roads with speed limits of 30 km/h, followed by those with speed limits of 60 km/h, 40 km/h and 70 km/h, but the number of accidents in them is far less than 30km. I suspect these roads with 30 km/h speed limit are probably to be the main roads in the city, where a large number of accidents occur due to the high number of pedestrians, the numerous traffic signs, the frequent lane changes and turning into parking lots."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Co-relation between variables"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In addition to visualizing the above parameter relationships, we can also explore the correlations between other variables since the data set used is in numerical form. In this work, the following variables are selected to find out the correlation between various columns by using corr() function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "selected_features = ['Police_Force', 'Accident_Severity', 'Number_of_Vehicles', 'Number_of_Casualties', 'Day_of_Week',\n",
    "      'Speed_limit', 'Pedestrian_Crossing-Human_Control', 'Pedestrian_Crossing-Physical_Facilities',\n",
    "      'Light_Conditions', 'Weather_Conditions', 'Road_Surface_Conditions', 'Special_Conditions_at_Site',\n",
    "      'Urban_or_Rural_Area', 'Did_Police_Officer_Attend_Scene_of_Accident', 'Vehicle_Type', 'Vehicle_Manoeuvre',\n",
    "      'Vehicle_Location-Restricted_Lane', 'Skidding_and_Overturning', '1st_Point_of_Impact', 'Journey_Purpose_of_Driver',\n",
    "      'Sex_of_Driver', 'Age_of_Driver', 'Engine_Capacity_(CC)', 'Age_of_Vehicle', 'Date_time']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true,
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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AGw/QVkxFBF15fcwIiIippGCXkRERB1TbD9SO8QwTzer8gwgaQXgqbqRIoJMvI2IiIhh5qsdICIiYpy6RdJOwLxNr7q9gV9XznQQcB7wckknAZsAH6iaKCIiIiIippMeehERERU0AygOBN7UnDof+EIHpty+ANiQssXvKtv318wTESDpetvr1M4RERER3ZGCXkRERIskTQA+DLwSuBk4zvaUyplGbbZve1JbWSLGK0mbAivaPl7SksBCtu9q7lvC9oN1E0ZERESXpKAXERHRomaS7DPAFcBWwN2296mc6ZLm5gRgPeBGygq9NYGrbW9aK1vEeCDpIMrv3sq2V5K0NHCG7U0qR4uIiIiOSg+9iIiIdq1qew0ASccB11TOg+3NASSdCuxp++bmeHVg/5rZIsaJ7YB1gEkAtv8qaeG6kSIiIqLLMuU2IiKiXc/0btTeajuCVXrFPADbtwBr14sTMW487bJtpjdhesHKeSIiIqLjskIvIiKiXWtJerS5LWBicyzAthepF43bJB0L/JBSWNgZuK1inojx4nRJRwGLSdoD2A04pnKmiIiI6LD00IuIiAhg6sCOjwCbNacuB46oPXk3YjyQtCVl6rWA821fWDlSREREdFgKehERETGVpInAMrbvqJ0lYryQtBzwt17xvPk9XMr23VWDRURERGelh15EREQAIGlb4AbgvOZ4bUlnVw0VMT6cAfyz7/jZ5lxERETEiFLQi4iIiJ6DgNcADwPYvgFYtl6ciHFjPttP9w6a2wtUzBMREREdl4JeRERE9Eyx/UjtEBHj0H3NClkAJL0duL9inoiIiOi4TLmNiIiInlsk7QTMK2lFYG/g15UzRYwHHwZOkvQdylCMPwO71I0UERERXZahGBEREQGApOcDB1ImbQKcD3whU24j2iFpIcrr88m1s0RERES3ZYVeRETEOCdpAmWF0CuBm4GNbE+pmypi7idpZ9s/lLTfsPMA2P56lWARERHReSnoRURExAnAM8AVwFbAq4B9agaKGCcWbD4vXDVFREREDJxsuY2IiBjnJN1se43m9nzANbbXrRwrIiIiIiJmICv0IiIi4pneDdtTetv9ImLOkvTt0e63vXdbWSIiImKwpKAXERERa0l6tLktYGJzLMC2F6kXLWKudl3tABERETGYsuU2IiIiIqIDJC1MKaL/X+0sERER0W3z1A4QERERETGeSVpd0vXALcBvJV0nabXauSIiIqK7UtCLiIiIiKjraGA/26+wvQzwH8AxlTNFREREh6WgFxERERFR14K2L+kd2L4UWLBenIiIiOi6DMWIiIiIiKjrTkmfBU5sjncG7qqYJyIiIjouK/QiIiIiIuraDVgS+HHz8UJg16qJIiIiotMy5TYiIiIiogJJE4APA68Ebga+b/uZuqkiIiJiEKSgFxERERFRgaTTgGeAK4CtgLtt71M1VERERAyEFPQiIiIiIiqQdLPtNZrb8wHX2F63cqyIiIgYAOmhFxERERFRx9Tttban1AwSERERgyUr9CIiIiIiKpD0LPBY7xCYCDze3LbtRWpli4iIiG5LQS8iIiIiosMkLW77odo5IiIiojuy5TYiIiIiotsuqh0gIiIiuiUFvYiIiIiIblPtABEREdEtKehFRERERHRbeuRERETENFLQi4iIiIiIiIiIGCAp6EVEREREdFu23EZERMQ0MuU2IiIiIqICSUuMdr/tB3v/rnc7IiIiAlLQi4iIiIioQtJdlP54ApYBHmpuLwbcY3u5eukiIiKiy7LlNiIiIiKiAtvL2V4eOB/YxvYLbb8A2Br4cd10ERER0WVZoRcRERERUZGk62y/eti5a22vVytTREREdNt8tQNERERERIxz90v6DPBDyhbcnYEH6kaKiIiILsuW24iIiIiIunYElgTOAn4CvKg5FxERETGibLmNiIiIiIiIiIgYINlyGxERERFRgaRv2t5H0jmUrbbTsL1thVgRERExAFLQi4iIiIio48Tm81erpoiIiIiBky23ERERERGVSVoSwPZ9tbNERERE92UoRkREREREBSoOlnQ/cDvwO0n3Sfpc7WwRERHRbSnoRURERETUsQ+wCbC+7RfYXhzYANhE0r5Vk0VERESnZcttREREREQFkq4HtrR9/7DzSwIX2F6nTrKIiIjouqzQi4iIiIioY/7hxTyY2kdv/gp5IiIiYkCkoBcRERERUcfTs3lfREREjHPZchsRERERUYGkZ4HHRroLmGA7q/QiIiJiRCnoRUREREREREREDJBsuY2IiIiIiIiIiBggKehFREREREREREQMkBT0IiIiIiIiIiIiBkgKehEREREREREREQMkBb2IiIiIiIiIiIgB8v8B351hH2Osu0EAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 1440x1080 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "corr =  df[selected_features].corr()\n",
    "plt.subplots(figsize=(20,15))\n",
    "sns.heatmap(corr)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As we can see, unfortunately there is not that strong correlation between any of the variables. Before getting the relationship graph, we would have expected a strong correlation between weather conditions and any of the variables, based on the experience of daily life. However, all we can learn from the graph is that there is a positive correlation between speed limit and urban and rural areas."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3. Methodology-Prediction Model Construction"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "With the data analysis and visualization above, it is simple to see the relationship between the different parameters and the number of traffic accidents occurring. However, it is not enough to understand the correlation, we also need to predict the severity of the accident occurrence by different parameters. This is because after we can predict the severity of an accident, we can give some recommendations to law enforcement to investigate the matter and prepare for the future. Also, we can provide more emergency medical services for these situations. Therefore, in this section, we will use different prediction models to speculate the severity of the accident with the help of different characteristics and select the relative optimal solution from them."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.1 Normalize the Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In machine learning, different feature indicators often have different magnitudes and magnitude units, and such a situation can affect the results of data analysis. In order to eliminate the influence of magnitudes between indicators, data normalization is needed to address the comparability between data indicators. In our dataset, we can normalize the age of drivers in our dataset from 18 to 88 years old in order to not let some of the metrics negatively affect the machine learning algorithm that follows. In addition, the age of the vehicle ranges from 0 to 100, which can also skew the performance of the machine learning algorithm, and in this section we normalize this predictor as well.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true,
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Normalize the data\n",
    "df['Age_of_Driver'] = np.log(df['Age_of_Driver'])\n",
    "df['Age_of_Vehicle'] = np.log(df['Age_of_Vehicle'])\n",
    "sns.distplot(df['Age_of_Driver']);\n",
    "fig = plt.figure()\n",
    "sns.distplot(df['Age_of_Vehicle']);\n",
    "fig = plt.figure()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.2 Set Training Set and Testing Set"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In order to speed up the iteration, only some meaningful features are selected for machine learning in this project, which can be seen in feature_list. then use the train_test_split function in Python to fairly split the training data and test data to make the prediction model with higher accuracy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.metrics import classification_report\n",
    "from sklearn.metrics import log_loss\n",
    "#from sklearn.feature_selection import RFE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "feature_list = ['Age_of_Driver' ,'Vehicle_Type', 'Age_of_Vehicle',\n",
    "                'Engine_Capacity_(CC)','Day_of_Week' , 'Weather_Conditions' , 'Road_Surface_Conditions'\n",
    "                          , 'Light_Conditions', 'Sex_of_Driver' ,'Speed_limit']\n",
    "X_ini = df[feature_list]\n",
    "y = df['Accident_Severity']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X_ini, y,test_size=0.20, random_state=99)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.3 Logistic Regression"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Although Logistic Regression is called Regression, is actually a classification model and is commonly used as a machine learning method for solving dichotomous (0 or 1) problems to estimate the likelihood of something (Tolles, 2016). The essence of Logistic Regression is that the data is assumed to obey this distribution, and then a great likelihood estimate is used to do the estimation of the parameters. Logistic regression is a Sigmoid function (non-linear) mapping on top of linear regression, making logistic regression a superior classification algorithm. In essence, both belong to the generalized linear model, but they have different problems to solve. Logistic regression solves the classification problem and outputs discrete values, while linear regression solves the regression problem and outputs continuous values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy 86.13\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           1   0.041667  0.000183  0.000364      5465\n",
      "           2   0.000000  0.000000  0.000000     47622\n",
      "           3   0.861354  0.999945  0.925490    329789\n",
      "\n",
      "    accuracy                       0.861302    382876\n",
      "   macro avg   0.301007  0.333376  0.308618    382876\n",
      "weighted avg   0.742519  0.861302  0.797173    382876\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Predicted</th>\n",
       "      <th>1</th>\n",
       "      <th>3</th>\n",
       "      <th>All</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Actual</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>5464</td>\n",
       "      <td>5465</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>47617</td>\n",
       "      <td>47622</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>18</td>\n",
       "      <td>329771</td>\n",
       "      <td>329789</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>All</th>\n",
       "      <td>24</td>\n",
       "      <td>382852</td>\n",
       "      <td>382876</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Predicted   1       3     All\n",
       "Actual                       \n",
       "1           1    5464    5465\n",
       "2           5   47617   47622\n",
       "3          18  329771  329789\n",
       "All        24  382852  382876"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr = LogisticRegression()\n",
    "lr.fit(X_train, y_train)\n",
    "y_pred = lr.predict(X_test)\n",
    "sk_report = classification_report(\n",
    "    digits=6,\n",
    "    y_true=y_test, \n",
    "    y_pred=y_pred)\n",
    "print(\"Accuracy\", round(accuracy_score(y_pred, y_test)*100,2))\n",
    "print(sk_report)\n",
    "pd.crosstab(y_test, y_pred, rownames=['Actual'], colnames=['Predicted'], margins=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.4 Decision Tree"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Decision tree is a basic classification and regression method used in statistics, data mining and machine learning for prediction (Wu et al., 2008). It can distill a tree type classification model from a given unordered training sample. It can be considered as a collection of if-then rules or as a conditional probability distribution defined over the feature space and class space. Its main advantage is that the model is readable and fast in classification. For learning, a decision tree model is built using training data and based on the principle of minimizing the loss function. For prediction, the decision tree model is used to classify new data, using the decision tree model.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy 74.88\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           1   0.036498  0.045929  0.040674      5465\n",
      "           2   0.154035  0.182668  0.167134     47622\n",
      "           3   0.869218  0.842166  0.855478    329789\n",
      "\n",
      "    accuracy                       0.748772    382876\n",
      "   macro avg   0.353251  0.356921  0.354429    382876\n",
      "weighted avg   0.768378  0.748772  0.758232    382876\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Predicted</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>All</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Actual</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>251</td>\n",
       "      <td>1126</td>\n",
       "      <td>4088</td>\n",
       "      <td>5465</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1223</td>\n",
       "      <td>8699</td>\n",
       "      <td>37700</td>\n",
       "      <td>47622</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5403</td>\n",
       "      <td>46649</td>\n",
       "      <td>277737</td>\n",
       "      <td>329789</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>All</th>\n",
       "      <td>6877</td>\n",
       "      <td>56474</td>\n",
       "      <td>319525</td>\n",
       "      <td>382876</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Predicted     1      2       3     All\n",
       "Actual                                \n",
       "1           251   1126    4088    5465\n",
       "2          1223   8699   37700   47622\n",
       "3          5403  46649  277737  329789\n",
       "All        6877  56474  319525  382876"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "decision_tree = DecisionTreeClassifier()\n",
    "decision_tree.fit(X_train, y_train)\n",
    "Y_pred = decision_tree.predict(X_test)\n",
    "acc_decision_tree1 = round(decision_tree.score(X_test, y_test) * 100, 2)\n",
    "sk_report = classification_report(\n",
    "    digits=6,\n",
    "    y_true=y_test, \n",
    "    y_pred=Y_pred)\n",
    "print(\"Accuracy\", acc_decision_tree1)\n",
    "print(sk_report)\n",
    "### Confusion Matrix \n",
    "pd.crosstab(y_test, Y_pred, rownames=['Actual'], colnames=['Predicted'], margins=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 4. Results and Discussion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4.1 Results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Logistic regression and decision tree models are used to predict the severity of traffic accidents under various characteristic parameters.\n",
    "First of all, in terms of accuracy, we can see from the results of the code run that the accuracy of logistic regression is 86.13, while the accuracy of decision tree is only 74.88, which can be intuitively obtained that logistic regression has higher accuracy compared to decision tree. However, the evaluation and comparison of the two methods do not rely on the accuracy alone. By looking at the results of the two methods on the confusion matrix, we can say with certainty that the decision tree model has better prediction results than the logistic regression model. The confusion matrix helps us to understand which algorithm is more effective in looking at all the different predictions for each class. From the confusion matrix of the decision tree, it is known that it is more positive and effective in predicting fatal and serious injury accidents. Even though it scores lower compared to the logistic regression model, this is because logistic regression predicts most minor accidents, and these numbers are high in the dataset overall.\n",
    "Through the above analysis, it can be concluded that the decision tree is better and effective  for the prediction model of this project.\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4.2 Discussion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The decision tree and logistic regression methods used in this work have achieved high accuracy though and can be used as effective tools for accident severity prediction. However, it is undeniable that the methods used in this paper are still too simple and lack depth. If one continues to use these two models for wake prediction, one can try to perform tuning hyperparameters and even try to predict all classes with polynomials in the hyperparameter tuning part. In addition, the Random Forest model is also a good prediction model, and more or deeper models can be chosen for prediction.\n",
    "\n",
    "In the sense of traffic safety management, more accurate prediction of the severity of traffic accidents is the focus of research in the direction of traffic safety management. In most cases, many traffic safety management measures are still limited by the limited experience of traffic managers, which may lead to deviations from the actual situation. In contrast, historical accident data records can be effectively learned using many excellent deep learning algorithms. Their prediction results can provide an important and effective reference for the subjective judgment of safety managers. In addition, the prediction results of severity levels can provide an effective reference for the implementation of traffic accident management and control measures, such as improving traffic infrastructure, improving lighting conditions, and implementing road speed restrictions and travel safety warnings.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 5. Conclusion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In summary, this paper provides a visual analysis of traffic accidents in the UK and predicts accident severity.\n",
    "This paper firstly answers the research question of this paper, this project found that young people around 20 years old, who have used a car for two or three years, have the highest number of traffic accidents on roads with a speed limit of 30km/h, and the lowest number of traffic accidents on Mondays of the week.\n",
    "\n",
    "Secondly, in the part of predicting accident severity, logistic regression and decision tree were used successively for analysis in this paper, and by comparing their prediction effects it was obtained that decision tree performed better in predicting accident severity for all categories. Even though logistic regression has higher accuracy, it does not mean that it does better than other algorithms.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Reference"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Al-Ghamdi, A.S., 2002. Using logistic regression to estimate the influence of accident factors on accident severity. Accident Analysis & Prevention, 34(6), pp.729-741.\n",
    "Hashmienejad, S.H.A. and Hasheminejad, S.M.H., 2017. Traffic accident severity prediction using a novel multi-objective genetic algorithm. International journal of crashworthiness, 22(4), pp.425-440.\n",
    "MENG, X.H., ZHENG, L. and QIN, G.M., 2009. Traffic Accidents Prediction and Prominent Influencing Factors Analysis Based on Fuzzy Logic [J]. Journal of transportation systems engineering and information Technology, 2, p.015.\n",
    "Tolles, J. and Meurer, W.J., 2016. Logistic regression: relating patient characteristics to outcomes. Jama, 316(5), pp.533-534.\n",
    "Wu, X., Kumar, V., Quinlan, J.R., Ghosh, J., Yang, Q., Motoda, H., McLachlan, G.J., Ng, A., Liu, B., Philip, S.Y. and Zhou, Z.H., 2008. Top 10 algorithms in data mining. Knowledge and information systems, 14(1), pp.1-37."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
